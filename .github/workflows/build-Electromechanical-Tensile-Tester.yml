name: build-Electromechanical-Tensile-Tester
on:
  push:
    paths:
      - "Electromechanical-Tensile-Tester/**"
      - ".github/workflows/build-Electromechanical-Tensile-Tester.yml"
      - "!**.md"
    branches: [main]
  pull_request:
    paths:
      - "Electromechanical-Tensile-Tester/**"
      - ".github/workflows/build-Electromechanical-Tensile-Tester.yml"
      - "!**.md"

env:
  PYTHONIOENCODING: "utf-8" # For log color

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macOS-latest, windows-latest]

    steps:
      - uses: actions/checkout@v3
        with:
            submodules: 'true'
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Create Mac OS installer
        if: runner.os == 'macOS'
        run: |
          brew install create-dmg
          cd Electromechanical-Tensile-Tester
          python -m venv .venv
          source .venv/bin/activate
          pip install --upgrade pip
          pip install ./pyAutoLab ./pyautolab-hioki ./pyautolab-optosigma ./pyautolab-loadcell
          pip install PySide6
          python -m pyautolab.create_installer

      - name: Create Windows installer
        if: runner.os == 'Windows'
        run: |
          cd Electromechanical-Tensile-Tester
          python -m venv .venv
          .venv\Scripts\activate.bat
          pip install --upgrade pip
          pip install .\pyAutoLab .\pyautolab-hioki .\pyautolab-optosigma .\pyautolab-loadcell
          pip install PySide6
          python -m pyautolab.create_installer

      - name: Archive app
        uses: actions/upload-artifact@v3
        with:
          name: ${{ runner.os }}-executable
          path: Electromechanical-Tensile-Tester/dist/*
